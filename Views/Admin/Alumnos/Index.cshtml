@* @model List<ProyectoFinalDAMAgil.Models.Admin.AlumnoModel>

@{
    ViewData["Title"] = Localizer["Title"];
}

<div class="container mt-5">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">@Localizer["ListaDeCentros"]</h3>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-between mb-3">
                <a asp-controller="Admin" asp-action="GuardarAlumno" class="btn btn-success">
                    <i class="bi bi-plus-circle"></i> @Localizer["CrearNuevo"]
                </a>

            </div>
            <table id="centrosTable" class="table table-hover table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>@Localizer["Nombre"]</th>
                        <th>@Localizer["Direccion"]</th>
                        <th>@Localizer["Acciones"]</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var item in Model)
                        {
                            <tr data-id="@item.IdCentro">
                                <td>@item.NombreCentro</td>
                                <td>@item.Direccion</td>
                                <td>
                                    <div class="btn-group" role="group" aria-label="Acciones">
                                        <a asp-controller="Admin" asp-action="ListarEstudios" asp-route-id="@item.IdCentro" class="btn btn-primary btn-sm">
                                            <i class="bi bi-gear"></i> @Localizer["Estudios"]
                                        </a>
                                        <a asp-controller="Admin" asp-action="EditarCentro" asp-route-id="@item.IdCentro" class="btn btn-secondary btn-sm">
                                            <i class="bi bi-pencil"></i> @Localizer["Editar"]
                                        </a>
                                        <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" data-url="@Url.Action("EliminarCentro", "Admin", new { id = item.IdCentro })">
                                            <i class="bi bi-trash"></i> @Localizer["Eliminar"]
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center">@Localizer["NoHayCentros"]</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel">@Localizer["ConfirmarEliminacion"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Localizer["SeguroEliminar"]
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancelar"]</button>
                    <a id="confirmDeleteButton" class="btn btn-danger">@Localizer["EliminarCentro"]</a>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var confirmDeleteModal = document.getElementById('confirmDeleteModal');
                confirmDeleteModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget; // Botón que disparó el modal
                    var url = button.getAttribute('data-url'); // Extraer la URL de los atributos data-*

                    // Actualizar el enlace del botón de confirmación
                    var confirmDeleteButton = confirmDeleteModal.querySelector('#confirmDeleteButton');
                    confirmDeleteButton.setAttribute('href', url);
                });

                var confirmDeleteButton = document.getElementById('confirmDeleteButton');
                confirmDeleteButton.addEventListener('click', function (event) {
                    event.preventDefault();
                    var url = confirmDeleteButton.getAttribute('href');

                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '@Localizer["CentroEliminado"]',
                                    text: '@Localizer["CentroEliminadoMensaje"]'
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: '@Localizer["Error"]',
                                    text: '@Localizer["ErrorEliminarCentro"]'
                                }).then(() => {
                                    location.reload();
                                });
                            }
                        })
                        .catch(error => {
                            Swal.fire({
                                icon: 'error',
                                title: '@Localizer["Error"]',
                                text: '@Localizer["ErrorGeneral"]'
                            }).then(() => {
                                location.reload();
                            });
                        });
                });

                // Funcionalidad de búsqueda
                document.getElementById('searchInput').addEventListener('keyup', function () {
                    var searchTerm = this.value.toLowerCase();
                    var rows = document.querySelectorAll('#centrosTable tbody tr');
                    rows.forEach(function (row) {
                        var nombre = row.querySelector('td:nth-child(1)').textContent.toLowerCase();
                        var direccion = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                        if (nombre.includes(searchTerm) || direccion.includes(searchTerm)) {
                            row.style.display = '';
                        } else {
                            row.style.display = 'none';
                        }
                    });
                });
            });
        </script>
    }
 *@